---
modules:
  - .macourts
---
objects:
  - macourts: MACourtList.using(courts=['housing_courts','bmc','district_courts','superior_courts','land_court', 'juvenile_courts', 'probate_and_family_courts'])
  - address: Address
  - addresses: DAList.using(object_type=Address, there_are_any=True)
---
question: |
  Enter an address
fields:
  - Street: addresses[i].address
    address autocomplete: True
  - City: addresses[i].city
  - State: addresses[i].state
  - Zip: addresses[i].zip
list collect: True
---
mandatory: True
code: |
  for add in addresses:
    add.geolocate()
---
code: |  
  courts = court_types.true_values()
  all_matches = macourts.matching_courts(addresses, court_types=courts)
  filtered = combined_locations(all_matches)
---
question: |
  Choose courts
fields:
  - no label: court_types
    datatype: checkboxes
    choices:
      - District Court
      - Boston Municipal Court
      - Housing Court
      - Superior Court
      - Probate and Family Court
      - Land Court
      - Juvenile Court
---
mandatory: True
question: |
  Results
subquestion: |
  ### Courts grouped by location (to 3 significant digits of lat/longitude)
  % for filter in filtered:
  * ${filter.description} : ${filter.location}  
  % endfor
  
  ### All matching courts
  Court | Address
  ------|--------------
  % for court in all_matches:
  % if court:
  ${court} | ${court.address.on_one_line()}
  % endif
  % endfor
  
  ${map_of(combined_locations(all_matches))}
